<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="QueryMap">

	<select id="getAssets" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				CAST(io_uuid AS varchar(100)) as xid , io_name as name
		from
				io_asset
		order by
				io_name
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
	<select id="getAssetsOnIDMain" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				asset.io_name as "Name",
				usr.io_full_name as "Owner",
				rel.io_name as "Release Status",
				asset.io_updated_on as "Updated On"
				
		from
				
				io_asset as asset
				LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = asset.io_owner)
				LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = asset.io_release_status[1])
				
		where
				asset.io_uuid = #id#::uuid 	
	</select>
	<select id="getAssetsOnIDStandard" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
select
				CAST(ass.io_uuid AS varchar(100)) as "ID",
				ass.io_path as "Path",
				folder.io_name as "Folder",
				app.io_name as "Application",
				pack.io_name as "Package",
				rel.io_name as "Release",
				ass.io_tags as "Tags",
				ass.io_description as "Description",
				ass.io_documentation as "Documentation",
				ass.io_notes as "Notes",
				usr.io_full_name as "Created By",
				usr1.io_full_name as "Updated By",
				ass.io_created_on as"Created On",
				acct.io_name as "Custodian"
		from
				io_asset as ass
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = ass.io_created_by)
					LEFT OUTER JOIN io_user as usr1
						ON (usr1.io_uuid = ass.io_updated_by)
					LEFT OUTER JOIN io_folder as folder
						ON (folder.io_uuid = ass.io_folder)
					LEFT OUTER JOIN io_application as app
						ON (app.io_uuid = ass.io_application)
					LEFT OUTER JOIN io_package as pack
						ON (pack.io_uuid = ass.io_package)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = ass.io_release)
					LEFT OUTER JOIN io_account as acct
						ON (acct.io_uuid = ass.io_custodian)
		where
				ass.io_uuid = #id#::uuid 
					
	</select>
	<select id="getAssetsOnIDSpecific" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				
				ass.io_reference_code as "Reference Code",
				ass.io_serial_number as "Serial Number",
				asst.io_name as "Parent Asset",
				usr.io_full_name as "Owner",
				contact.io_name as "Primary Contact",
				prod.io_name as "Product",
				ass.io_unit_price[1] as "Price",
				ass.io_quantity[1] as "Quantity",
				ass.io_total_quantity[1] as "Total Quantity",
				ass.io_total_price[1] as "Total Price",
				ass.io_website as "WebSite",
				ass.io_login as "Login",
				ass.io_password_reminder as "Password Reminder",
				ass.io_warranty_expiration_date as "Warranty Expiration Date",
				ass.io_last_maintenance_date as "Last Maintenance Date",
				ass.io_next_maintenance_date as "Next Maintenance Date",
				ass.io_usage_end_date as "Usage End Date",
				ass.io_location as "Location"
			<!-- ass.io_qr_code as "QR Code",
				ass.io_label as "label"  -->	
		From
				io_asset as ass 
					LEFT OUTER JOIN io_contact as contact
					ON(contact.io_uuid = ass.io_primary_contact)
					LEFT OUTER JOIN io_asset as asst
					ON(asst.io_uuid = ass.io_parent_asset)
					LEFT OUTER JOIN io_user as usr
					ON(usr.io_uuid = ass.io_owner)
					LEFT OUTER JOIN io_product as prod
					ON(prod.io_uuid = ass.io_product)
		where
				ass.io_uuid = #id#::uuid 
		 	
	</select>
	<select id="getAssetsOnAccountID" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				inv.xid , inv.name "name"
		
		from
				xrm_invoice as inv
					
		where
				inv.customerid = #id#
		order by
				xid
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
</sqlMap>
