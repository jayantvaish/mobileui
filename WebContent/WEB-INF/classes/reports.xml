<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="QueryMap">

	<select id="getReports" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				CAST(io_uuid AS varchar(100)) as xid , io_name as name
		from
				io_report
		order by
				io_name
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
	<select id="getReportsOnIDMain" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				repo.io_name as "Name",
				usr.io_full_name as "Owner",
				rel.io_name as "Release Status",
				repo.io_updated_on as "Updated On"
				
		from
				
				io_report as repo
				LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = repo.io_owner)
				LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = repo.io_release_status[1])
				
		where
				repo.io_uuid = #id#::uuid	
	</select>
	<select id="getReportsOnIDStandard" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				CAST(repo.io_uuid AS varchar(100)) as "ID",
				repo.io_path as "Path",
				folder.io_name as "Folder",
				app.io_name as "Application",
				pack.io_name as "Package",
				rel.io_name as "Release",
				repo.io_tags as "Tags",
				repo.io_description as "Description",
				repo.io_documentation as "Documentation",
				repo.io_notes as "Notes",
				usr.io_full_name as "Created By",
				usr1.io_full_name as "Updated By",
				repo.io_created_on as"Created On",
				acct.io_name as "Custodian"
		from
				io_report as repo
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = repo.io_created_by)
					LEFT OUTER JOIN io_user as usr1
						ON (usr1.io_uuid = repo.io_updated_by)
					LEFT OUTER JOIN io_folder as folder
						ON (folder.io_uuid = repo.io_folder)
					LEFT OUTER JOIN io_application as app
						ON (app.io_uuid = repo.io_application)
					LEFT OUTER JOIN io_package as pack
						ON (pack.io_uuid = repo.io_package)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = repo.io_release)
					LEFT OUTER JOIN io_account as acct
						ON (acct.io_uuid = repo.io_custodian)
		where
				repo.io_uuid = #id#::uuid 
					
	</select>
	<select id="getReportsOnIDSpecific" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				
				obj.io_name as "Related Object",
				repo.io_definition as "Definition" 
		
		From
				io_report as repo
					LEFT OUTER JOIN io_object as obj
					ON(obj.io_uuid = repo.io_related_object)
		where
				repo.io_uuid = #id#::uuid
		 	
	</select>
	<select id="getReportsOnAccountID" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				inv.xid , inv.name "name"
		
		from
				xrm_invoice as inv
					
		where
				inv.customerid = #id#
		order by
				xid
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
</sqlMap>
