<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="QueryMap">

	<select id="getTopics" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				CAST(io_uuid AS varchar(100)) as xid, io_title as name
		from
				io_topic
		order by
				io_title
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
	<select id="getTopicsByIDMain" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select

                top.io_title as "Title",
                usr.io_full_name as "Owner",
                rel.io_name as "Release Status",
                top.io_updated_on as "Updated On"				
		from
				io_topic as top
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = top.io_owner)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = top.io_release_status[1])
		where
				top.io_uuid = #id#::uuid
	</select>
	<select id="getTopicsByIDStandard" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select

                CAST(top.io_uuid as VARCHAR(100)) as "Record ID",
                top.io_path as "Path",
                fold.io_name as "Folder",
                app.io_name as "Application",
                pack.io_name as "Package",
                rel.io_name as "Release",
                usr.io_full_name as "Created By",
                usr1.io_full_name as "Updated By",
                top.io_created_on as "Created On",
                top.io_tags as "Tags",
                top.io_description as "Description",
                top.io_documentation as "Documentation",
                top.io_notes as "Notes"				
		from
				io_topic as top
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = top.io_created_by)
					LEFT OUTER JOIN io_user as usr1
						ON (usr1.io_uuid = top.io_updated_by)
					LEFT OUTER JOIN io_folder as fold
						ON (fold.io_uuid = top.io_folder)
					LEFT OUTER JOIN io_package as pack
						ON (pack.io_uuid = top.io_package)
					LEFT OUTER JOIN io_application as app
						ON (app.io_uuid = top.io_application)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = top.io_release)
					
		where
				top.io_uuid = #id#::uuid
	</select>
	<select id="getTopicsByIDSpecific" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
			top.io_navigation_title as "Navigation Title",
			obj.io_name as "Related Object",
			top.io_search_title as "Search Title",
			top.io_class as "Class",
			top.io_prolog as "Prolog",
			lang.io_name as "Original Language",
			top.io_published_on as "Published On",
			top.io_valid_on as "Valid On",
			top.io_expired_on as "Expired On",
			top.io_recommended_role as "Recommended Role"
		FROM
			io_topic as top
			LEFT OUTER JOIN io_object as obj
			ON(obj.io_uuid = top.io_related_object)
			LEFT OUTER JOIN io_language as lang
			ON(lang.io_uuid = top.io_original_language)
		where
			top.io_uuid =  #id#::uuid
	</select>
	<select id="getTopicsByAccountID" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				con.xid , con.fullname as "name" ,con.mobilephone as "Mobile No" ,
				con.emailaddress1 as "Email ID" 
		from
				xrm_contact as con
		where
				con.parentcust = #id#
		order by
				xid
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
</sqlMap>