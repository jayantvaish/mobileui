<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="QueryMap">

	<select id="getQuotes" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				CAST(io_uuid AS varchar(100)) as xid , io_name as name
		from
				io_quote
		order by
				io_valid_until
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
	<select id="getQuotesByIDMain" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				quot.io_name as "Name",
				usr.io_full_name as "Owner",
				quot.io_release_status[1] as "Release Status",
				quot.io_updated_on as "Updated On"
				
		from
				
				io_quote as quot
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = quot.io_owner)
				
		where
				quot.io_uuid = #id#::uuid
			
	</select>
	<select id="getQuotesByIDStandard" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
	select
				CAST(quot.io_uuid AS varchar(100)) as "ID",
				quot.io_path as "Path",
				folder.io_name as "Folder",
				app.io_name as "Application",
				pack.io_name as "Package",
				rel.io_name as "Release",
				quot.io_tags as "Tags",
				quot.io_description as "Description",
				quot.io_documentation as "Documentation",
				quot.io_notes as "Notes",
				usr.io_full_name as "Created By",
				usr1.io_full_name as "Updated By",
				quot.io_created_on as"Created On"
		from
				io_quote as quot
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = quot.io_created_by)
					LEFT OUTER JOIN io_user as usr1
						ON (usr1.io_uuid = quot.io_updated_by)
					LEFT OUTER JOIN io_folder as folder
						ON (folder.io_uuid = quot.io_folder)
					LEFT OUTER JOIN io_application as app
						ON (app.io_uuid = quot.io_application)
					LEFT OUTER JOIN io_package as pack
						ON (pack.io_uuid = quot.io_package)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = quot.io_release)
		where
				quot.io_uuid = #id#::uuid 
			
	</select>
	<select id="getQuotesByIDSpecific" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select 
				quot.io_reference_code as "Reference Code",
				opp.io_name as "Opportunity",
				acct.io_name as "Account",
				cont.io_name as "Primary Contact",
				quot.io_valid_until as "Valid Until",
				quot.io_last_sent as "Last Sent",
				price.io_name as "Price List",
				quot.io_total_price[1] as "Total Price",
				tax.io_name as "Tax Rate",
				quot.io_taxes[1] as "Taxes",
				quot.io_shipping_and_handling[1] as "Shipping and Handling",
				quot.io_grand_total[1] as "Grand Total",
				quot.io_billing_to_name as "Billing to Name",
				quot.io_billing_street[1] as "Billing Street",
				quot.io_ship_to_name as "Ship to Name",
				quot.io_shipping_street[1] as "Shipping Street"
			
		From	
				io_quote as quot 
					LEFT OUTER JOIN	io_opportunity as opp
						ON (opp.io_uuid = quot.io_opportunity)
					LEFT OUTER JOIN	io_account as acct
						ON (acct.io_uuid = quot.io_account)
					LEFT OUTER JOIN	io_contact as cont
						ON (cont.io_uuid = quot.io_primary_contact)
					LEFT OUTER JOIN	io_price_list as price
						ON (price.io_uuid = quot.io_price_list)
					LEFT OUTER JOIN	io_tax_rate as tax
						ON (tax.io_uuid = quot.io_tax_rate)
			
		where
				quot.io_uuid = #id#::uuid 
			
	</select>
	<select id="getQuotesByAccountID" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select 
				quote.xid , quote.name as "name"
		from 
				xrm_quote as quote 
		where 
				quote.accountid = #id# 
		order by
				xid 
		OFFSET 
				#startFrom# 
		LIMIT 
				#upto#
	</select>
</sqlMap>