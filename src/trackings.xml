<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="QueryMap">

	<select id="getTrackings" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				CAST(io_uuid AS varchar(100)) as xid , io_name as name
		from
				io_tracking
		order by
				io_name
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
	<select id="getTrackingsOnIDMain" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				track.io_name as "Name",
				usr.io_full_name as "Owner",
				rel.io_name as "Release Status",
				track.io_updated_on as "Updated On"
				
		from
				
				io_tracking as track
				LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = track.io_owner)
				LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = track.io_release_status[1])
				
		where
				track.io_uuid = #id#::uuid	
	</select>
	<select id="getTrackingsOnIDStandard" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				CAST(track.io_uuid AS varchar(100)) as "ID",
				track.io_path as "Path",
				folder.io_name as "Folder",
				app.io_name as "Application",
				pack.io_name as "Package",
				rel.io_name as "Release",
				track.io_tags as "Tags",
				track.io_description as "Description",
				track.io_documentation as "Documentation",
				track.io_notes as "Notes",
				usr.io_full_name as "Created By",
				usr1.io_full_name as "Updated By",
				track.io_created_on as"Created On",
				acct.io_name as "Custodian"
		from
				io_tracking as track
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = track.io_created_by)
					LEFT OUTER JOIN io_user as usr1
						ON (usr1.io_uuid = track.io_updated_by)
					LEFT OUTER JOIN io_folder as folder
						ON (folder.io_uuid = track.io_folder)
					LEFT OUTER JOIN io_application as app
						ON (app.io_uuid = track.io_application)
					LEFT OUTER JOIN io_package as pack
						ON (pack.io_uuid = track.io_package)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = track.io_release)
					LEFT OUTER JOIN io_account as acct
						ON (acct.io_uuid = track.io_custodian)
		where
				track.io_uuid = #id#::uuid 
					
	</select>
	<select id="getTrackingsOnIDSpecific" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		
		select
				
				dp.io_name as "Datatype",
				track.io_target as "Target",
				track.io_warning_threshold as "Warning Threshold",
				track.io_alert_threshold as "Alert Threshold",
				<!--track.io_scope as "Scope", -->
				obj.io_name as "Related Objects",
				sch.io_name as "Scheduler",
				track.io_ordering_position as "Ordering Position",
				track.io_green_message as "Green Message",
				track.io_yellow_message as "Yellow Message",
				track.io_red_message as "Red Message",
				track.io_blue_message as "Blue Message",
				track.io_grey_message as "Grey Message",
				track.io_decimals_display as "Decimals Display"
				<!--track.io_value_display as "Value Display"
				 track.io_expression[1] as "Expression" -->
		
		From
				io_tracking as track
					LEFT OUTER JOIN io_object as obj
					ON(obj.io_uuid = track.io_related_object)
					LEFT OUTER JOIN io_tracking_scheduler as sch
					ON(sch.io_uuid = track.io_scheduler)
					LEFT OUTER JOIN io_datatype as dp
					ON(dp.io_uuid = track.io_datatype)
		where
				track.io_uuid = #id#::uuid
		 	
	</select>
	<select id="getTrackingsOnAccountID" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				inv.xid , inv.name "name"
		
		from
				xrm_invoice as inv
					
		where
				inv.customerid = #id#
		order by
				xid
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
</sqlMap>
