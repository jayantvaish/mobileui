<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="QueryMap">

	<select id="getContacts" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				CAST(io_uuid AS varchar(100)) as xid, io_name as name
		from
				io_contact
		order by
				io_name
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
	<select id="getContactsByIDMain" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select

                cont.io_name as "Name",
                usr.io_full_name as "Owner",
                cont.io_updated_on as "Updated On"				
		from
				io_contact as cont
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = cont.io_owner)
		where
				cont.io_uuid = #id#::uuid
	</select>
	<select id="getContactsByIDStandard" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select

                CAST(cont.io_uuid as VARCHAR(100)) as "Record ID",
                cont.io_path as "Path",
                fold.io_name as "Folder",
                app.io_name as "Application",
                pack.io_name as "Package",
                rel.io_name as "Release",
                usr.io_full_name as "Created By",
                usr1.io_full_name as "Updated By",
                cont.io_created_on as "Created On",
                cont.io_tags as "Tags",
                cont.io_description as "Description",
                cont.io_documentation as "Documentation",
                cont.io_notes as "Notes"				
		from
				io_contact as cont
					LEFT OUTER JOIN io_user as usr
						ON (usr.io_uuid = cont.io_created_by)
					LEFT OUTER JOIN io_user as usr1
						ON (usr1.io_uuid = cont.io_updated_by)
					LEFT OUTER JOIN io_folder as fold
						ON (fold.io_uuid = cont.io_folder)
					LEFT OUTER JOIN io_package as pack
						ON (pack.io_uuid = cont.io_package)
					LEFT OUTER JOIN io_application as app
						ON (app.io_uuid = cont.io_application)
					LEFT OUTER JOIN io_release as rel
						ON (rel.io_uuid = cont.io_release)
					
		where
				cont.io_uuid = #id#::uuid
	</select>
	<select id="getContactsByIDSpecific" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
					<!-- cont.io_salutation[1] as "Salutation", --> 
					cont.io_first_name as "First Name",
					cont.io_last_name as "Last Name",
					acct.io_name as "Account",
					cont.io_group as "Group",
					cont.io_department as "Department",
					cont.io_title as "Title",
					cont.io_phone as "Phone",
					cont.io_mobile as "Mobile",
					cont.io_fax as "FAX",
					cont.io_email as "E-Mail",
					asst.io_name as "Assistant",
					manag.io_name as "Manager",
				<!--  	cont.io_mailing_city as "Mailing City",
					cont.io_mailing_state_province as "Mailing State/Province",
					cont.io_mailing_posta_code as "Mailing ZIP",
					cont.io_mailing_country as "Mailing Country",
					cont.io_othe_city as "Other City",
					cont.io_other_state_province as "Other State/Province",
					cont.io_other_postal_code as "Other ZIP/Postal",
					cont.io_other_country as "Other Country",
					cont.io_home_phone as "Home Phone",
					cont.io_other_phone as "Other Phone",
					cont.io_mailing_street as "Mailing Street",
					cont.io_other_street as "Other Street",-->
					cont.io_personal_interests as "Personal Interest",
					cont.io_other_email as "Other Email",
					cont.io_website as "WebSite",
					cont.io_blog as "Blog",
					cont.io_facebook_id as "Facebook ID",
					cont.io_google_id as "Google ID",
					cont.io_linkedin_id as "LinkedIn ID",
					cont.io_skype_id as "Skype ID",
					cont.io_twitter_id as "Twitter ID",
					cont.io_buying_role[1] as "Buying Role",
					lead.io_name as "Originating Lead",
					part.io_name as "Spouse/Partner"	
			
		from 
					io_contact as cont
						LEFT OUTER JOIN io_account as acct
							ON (acct.io_uuid = cont.io_account)
						LEFT OUTER JOIN io_contact as asst
							ON (asst.io_uuid = cont.io_assistant)
						LEFT OUTER JOIN io_contact as manag
							ON (manag.io_uuid = cont.io_manager)
						LEFT OUTER JOIN io_lead as lead
							ON (lead.io_uuid = cont.io_originating_lead)
						LEFT OUTER JOIN io_contact as part
							ON (part.io_uuid = cont.io_spouse_partner)
		where
					cont.io_uuid = #id#::uuid
	</select>
	<select id="getContactsByAccountID" resultClass="java.util.LinkedHashMap"
		parameterClass="java.util.Map">
		select
				con.xid , con.fullname as "name" ,con.mobilephone as "Mobile No" ,
				con.emailaddress1 as "Email ID" 
		from
				xrm_contact as con
		where
				con.parentcust = #id#
		order by
				xid
		OFFSET
				#startFrom#
		LIMIT
				#upto#
	</select>
</sqlMap>